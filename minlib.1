." +AMDG
." Process with:
." groff -man -Tascii minlib.1
.TH minlib 1 "June 2016" dgoodmaniii minlib
.SH NAME
minlib \- a text-based library management program
.SH SYNOPSIS
.B minlib
[\fB\-r\fR \fIformatstring\fR]
[\fB\-f\fR \fIinputfile[,...]\fR]
.SH DESCRIPTION
.B minlib
A text-based library management program, designed to do one
thing---manage your library, physical and digital---and do
it well. Customizable formatting, usable with books, files,
movies, music or any other media.  Features include
filtering, searching, and more.
.SH OPTIONS
.TP
.BR \-V
Print version and licensing information, then exit
successfully.
.TP
.BR "\-a \fIfile/directory\fR"
Asks \fBminlib\fR to explore some files and output their
metadata in a form suitable for inclusion in a \fBminlib\fR
database.  This will be outputted to stdout, so you can
redirect it to a file as you will.  If you give
\fIfilename\fR as an argument, \fBminlib\fR will output only
the metadata for that file; if you give \fIdirectory\fR as
an argument, \fBminlib\fR will descend recursively through
that directory, outputting metadata for every suitable file
it can find.  Very useful for combing your directory tree
for files that you probably want in your library, but don't
want to manually enter the information for.  Works for
\fIpdf\fR and \fIepub\fR files.
.PP
.RS
Be aware that an error on any one file while traveling the
tree will stop \fBminlib\fR entirely; this is in keeping
with the "when you must fail, fail as soon and as noisily
as possible" principle.  You may have to move the
troublesome file from the tree if you can't resolve the
issue.
.RE
.TP
.BR "\-f \fIfilename\fR"
Use \fIfilename\fR as the source of library records.  You
can supply a comma-separated list of source files in this
argument, and \fBminlib\fR will do the right thing and use
them all, by dumping them all into a temporary file and then
inputting that.
.TP
.BR "\-r \fIrecord-format\fR"
Use \fIrecord-format\fR as the format for each individual
record outputted by \fBminlib\fR.  By default, this is
\fB%29t | %20L | %10F | %4l | %4g\fR, which the astute
reader will see adds to precisely the default terminal width
of 80 characters.  The format is similar to that of C's
printf, in that we use a percent sign, followed by a number,
followed by a single character which specifies what to fill
in, but it is quite different from that of C's printf in
that it requires that each formatting character be
accompanied by a number of characters.  Given the extreme
variability of field lengths, and the extreme limitation of
most terminals, this restriction seems reasonable.
.RS
.HP
Interpreted sequences are:
.TP 
%t
The title; matched with field heading TITLE.
.TP
%L
The author's last name; matched with field heading AUTHLAST.
.TP
%M
The author's middle name; matched with field heading
AUTHMID.
.TP
%F
The author's first name; matched with field heading
AUTHFIRST.
.TP
%l
The language of the work; matched with field heading LANG.
.TP
%g
The genre, or type, of the work; matched with field headings
TYPE or GENRE.
.TP
%y
The year of the work; matched with field heading YEAR.
.TP
%m
Media of the work; e.g., book, film, etc.  Matched with
field heading MEDIUM.
.TP
%P
Place or location of the work; e.g., shelf, storage, etc.
Matched with field heading PLACE or LOCATION.
.TP
%e
Editor of the work; matched with field heading EDITOR.
.TP
%T
Translator of the work; matched with field heading
TRANSLATOR.
.TP
%d
Director of the work; matched with field heading DIRECTOR.
.PP
An unknown sequence won't bother \fBminlib\fR; it will just fill
up that field with spaces.
.RE
.SH FILES
\fBminlib\fR uses two files primarily:  the data, or library
file, which has the actual library information in it, and a
run-control, or config file, which contains simple lines to
control \fBminlib\fR's behavior.
.SS The Data File
The data file, or library file, is a pretty simple "cookie
jar" format, consisting of multi-line records separated by
lines containing two percentage marks, or (\fB%%\fR).  No
line can contain the text "\fB%%\fR" except record
separating lines; \fBminlib\fR will always consider such
lines to be starting a new record.
.PP
\fBPlease note that every record requires a %% to begin it,
including the first in a file.\fR
.PP
Between each record-separating line are the individual
fields of the record.  These consist of a field name in all
capital letters, a colon, and then the text of the field.
After the colon, whitespace can be inserted or deleted at
will, with no change in how \fBminlib\fR reads the line.
Each field must be contained entirely on one line, however.
.PP
An example record:
.RS
%%
.br
TITLE:  My Very Favorite Book
.br
AUTHLAST:  Publick
.br
AUTHMID: Q
.br
AUTHFIRST:  John
.br
GENRE:  Scifi
.br
LANGUAGE:  English
.br
YEAR:	1998
.br
MEDIA:  book
.RE
You then repeat this as many times as you need to to build
your library database.
.PP
Because \fBminlib\fR accepts multiple files at the same
time, you can divide your library files however you wish,
and \fBminlib\fR will accept whichever files you specify,
sort them all together, and display them to you.  So you can
have one file with your books, one with your movies, one
with your music, and one with your vintage 8-tracks of
original Swedish ABBA and still get them all at once if you
want.
.PP
There are no artificial limits on the fields you can
include; if you particular library database requires "FOO"
as a field, just put it in there.  \fBminlib\fR will not be
able to sort your records by fields it doesn't know;
however, it will be able to search for such fields, and it
will be able to display such fields in its detail view, when
you select a record.
.PP
For fields that \fBminlib\fR knows, see the section on the
\fB\-r\fR option above.
.PP
It's important to note that options given on the command
line take precedence over conflicting options in the config
file.
.SS Run-Control File (Config File)
The run-control file ("rc" or "config" file) contains the
configurable options for \fBminlib\fR to use.  Note that
when options specified on the command line conflict with
those in the config file, the options on the command line
will take precedence.
.PP
.BR Locations
.PP
\fBminlib\fR will take a config file wherever you want it
to, provided that you have read access to that file.  If you
don't provide it a config file, it will attempt to read from
"\fI$HOME/.minlibrc\fR", which, of course, may not exist.
If it can't find that, it will give up and assume you don't
want it to consider a config file.
.PP
.BR Options
.PP
\fBminlib\fR allows you to set defaults for many different
configuration options in your config file.  Most
importantly, these are input files; record format strings;
and default viewers for digital files.  Like the input file
we discussed above, the format is simple:  an all-caps
string which says what option you're trying to set, and then
the value of that option.  Whitespace on the line is
ignored.  So, for example:
.PP
.RS
PDF_VIEWER:  xpdf -cont %s
.br
TOP_FORE_COLOR:  COLOR_BLUE
.br
TOP_BACK_COLOR:  COLOR_YELLOW
.RE
.PP
A \fBminlib\fR rc-file is essentially just a list of lines
of this type.
.BR Colors
.PP
\fBminlib\fR allows you to set the colors for pretty much
everything in the program.  Normal \fIncurses\fR colors will
be accepted by \fBminlib\fR.  These are \fBCOLOR_BLACK\fR,
\fBCOLOR_RED\fR, \fBCOLOR_GREEN\fR, \fBCOLOR_YELLOW\fR,
\fBCOLOR_BLUE\fR, \fBCOLOR_MAGENTA\fR, \fBCOLOR_CYAN\fR, or
\fBCOLOR_WHITE\fR.
.PP
If you do not set a particular color, \fBminlib\fR will
select a reasonable default for you.  The algorithm for this
is simple:  foreground colors will be set to
\fBCOLOR_WHITE\fR and background colors to
\fBCOLOR_BLACK\fR.  Be aware that, if you set some
foreground colors without setting the corresponding
background colors, these defaults might make your color
scheme illegible.
.PP
The colors that can be set are:
.TP
.BR TOP_FORE_COLOR
The foreground color (that is, the color for the text) in
the top bar.  This is the top bar in both menu view and
detail view.
.TP
.BR TOP_BACK_COLOR
The background color (that is, the color for the background
of the text) in the top bar.  This is the top bar in both
menu view and detail view.
.TP
.BR BOT_FORE_COLOR
The foreground color (that is, the color for the text) in
the bottom bar.  This is the bottom bar in both menu view and
detail view.
.TP
.BR BOT_BACK_COLOR
The background color (that is, the color for the background
of the text) in the bottom bar.  This is the bottom bar in both
menu view and detail view.
.TP
.BR MEN_FORE_COLOR
The foreground color (that is, the color for the text) in the 
menu; this will also be the background color of the
currently active item on the menu.  That is, inactive items
(items the cursor is \fInot\fR on) will have this as the
text color; the active item (the item the cursor \fIis\fR
on) will have this as the background color.
.TP
.BR MEN_BACK_COLOR
The background color (that is, the color for the background
of the text) in the menu; this will also be the text color
of the currently active item on the menu.  That is, inactive
items (items the cursor is \fInot\fR on) will have this as
the background color; the active item (the item the cursor
\fIis\fR on) will have this as the text color.
.TP
.BR DET_FIELD_FORE_COLOR
The foreground color (that is, the color for the text) for
the field names in detail view.
.TP
.BR DET_FIELD_BACK_COLOR
The background color (that is, the color for the background
of the text) for the field names in detail view.
.TP
.BR DET_TXT_FORE_COLOR
The foreground color (that is, the color for the text) for
the field values in detail view.
.TP
.BR DET_TXT_BACK_COLOR
The background color (that is, the color for the background
of the text) for the field values in detail view.
.TP
.BR DET_BACK_COLOR
The background color for the whole window in detail view.
.SH EXIT STATUS
\fBminlib\fR returns 0 if successful, non-zero if it fails
for some reason.  See the \fBERRORS\fR section for possible
failure exit statuses.
.SH ERRORS
\fBminlib\fR can, like all programs, go wrong in a huge
number of ways; but fortunately, most of those are extremely
unlikely.  Still, \fBminlib\fR tries hard to give precise
failure information, even for those situations that
basically never happen.
.PP
So upon failure, \fBminlib\fR prints both an error message
to \fIstderr\fR and exits with a particular status.  Error
codes are as follows:
.TP
.BR 1
You gave \fBminlib\fR an option that it doesn't recognize.
.TP
.BR 2
You supplied \fBminlib\fR an option which requires an
argument, but didn't send it an argument.  E.g., you said
\fB\-r\fR, but didn't say what you wanted the formatting
string to be.
.TP
.BR 3, 4, 5, 6, 7, 9
Insufficient memory errors; this are only thrown when the
operating system can't provide enough memory for
\fBminlib\fR to do its thing.  Since \fBminlib\fR doesn't
require much memory, these errors are exceedingly unlikely.
\fB3\fR means it couldn't load the data file; \fB4\fR means
means that it couldn't load the data file into formatted
lines; \fB5\fR means that it couldn't load the array used to
track the formatted lines; \fB6\fR means that it couldn't
get enough memory for the format string; \fB7\fR
indicates insufficient memory for a variety of minor
internal tasks; \fB9\fR means there is insufficient memory
for the filename string.
.TP
.BR 8
A problem opening the data file.  A message printed to
stderr will give the name of the file and the error number.
.TP
.BR 10
A problem opening the config file.  A message printed to
stderr will give the name of the file and the error number.
.TP
.BR 11
\fBminlib\fR has checked in all the usual places (a config
file and the command line), but hasn't found an input file
(that is, a database or library file).  As such, it has
nothing to do and quites.
.TP
.BR 12
\fBminlib\fR uses temporary files to process multiple input
files.  However, it's been unable to construct such a
temporary file.  Check your permissions to resolve this.
.TP
.BR 13
You've asked \fBminlib\fR to print the metadata of a file
with the "\fB\-a\fR" option; however, it's having some
trouble getting information about that file.  The
specific error message printed will tell you more.
.TP
.BR 14
You've asked \fBminlib\fR to print the metadata of a file
with the "\fB\-a\fR" option; however, it's having some
trouble opening that file.  Probably a permissions issue;
the specific error message printed will tell you more.
.TP
.BR 15
You've asked \fBminlib\fR to print the metadata from a pdf
file; but pdf files are notoriously difficult to parse, and
\fBminlib\fR has to perform some dark tricks to make it
work.  One of these involves reading a file in a decidedly
non-Unixy way, and requires the size of the file to do so.
\fBminlib\fR can't find the size; better skip it.
.SH BUGS
None known at this time.
.SH AUTHOR
Donald P. Goodman III <dgoodmaniii at gmail dot com>
.SH SEE ALSO
pdfinfo
